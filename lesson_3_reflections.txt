When would you want to use a remote repository rather than keeping all your work
local?

    If you are wanting to share your work, back it up, or have remote collaborators.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You may want to always manually pull changes so that your current work isn't being overwritten if you're collaborating with the mutliple people on the same branch.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks clone a GitHub repo from one account to another, linking the two. Clones create a copy locally from another local repo or a remote one (even on GitHub), branches create a local "fork."

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that your files and the remote copy don't get too far out of sync so that it's difficult to merge the changes together.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Using email and/or messaging. It would be harder to see the history and make changes directly remotely. You wouldn't have to worry about files being in sync, everything would have to be remote-essentially.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When you're trying out a new feature or something that needs to be tested and worked on outside of the main branch of development. For example, you are are working on a experimental feature that will likely break other parts of your program/introduce bugs, you would create a branch for that development to occur so that you're not messing anything up in the main program.
